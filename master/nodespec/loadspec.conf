# Global And Per-node Load Specifications

[common]

# Options: trace, statistical
# trace = use if you want to replay resource usage traces
# statistical = use if you want load generation to follow
#               common statistical distributions
TYPE = trace
#TYPE = statistical


[trace]

# Path to the input resource usage trace file.
# NOTE: Lines beginning with "#" in file are ignored.
DATA_FILE = ./traces/google-cluster-data-1.csv

# Separator used in input trace file
# Valid options: comma, whitespace
SEPARATOR = whitespace

## Column numbers below begin from 0.

# Column that identifies timestamps of samples
TIMESTAMP_COL = 0

# Column in trace the identifies machine or job
# from which utilization data has been collected.
ITEM_IDENTIFIER_COL = 3

# Column in trace that contains CPU util value.
CPU_COL = 4

# What format is utilization information specified?
# Options: absolute, relative
CPU_UTIL_FORMAT = relative
#CPU_UTIL_FORMAT = absolute

# Column in trace that contains Mem util value.
MEM_COL = 5

# What format is utilization information specified?
# Options: absolute, relative
MEM_UTIL_FORMAT = relative
#MEM_UTIL_FORMAT = absolute

# Max amount of memory that the per-node load
# generator can touch. It is often desired 
# that this be < 100% to leave room for OS
# and other apps.
MEM_LIMIT_PCT = 40


[statistical]

# Type of statistical distribution to be used for
# load generation.
# Options: uniform, gaussian
DISTRIBUTION_CPU = gaussian
DISTRIBUTION_MEM = gaussian

# Workload description file
# The format is specific to the distribution required.
WORKLOAD_DESC_FILE_CPU = ./stat_workloads/gauss.txt
WORKLOAD_DESC_FILE_MEM = ./stat_workloads/gauss.txt

# Separator used in workload desc file.
# Valid options: comma, whitespace
SEPARATOR = comma

## Column numbers below begin from 0

# uniform distribution parameters in desc file
#UNIFORM_MIN_COL = 1
#UNIFORM_MAX_COL = 2

# gaussian
GAUSSIAN_MEAN_COL = 1
GAUSSIAN_STDEV_COL = 2

# How long should the workload last?
WORKLOAD_DURATION_MINS = 180

# Max amount of memory that the per-node load
# generator can touch. It is often desired 
# that this be < 100% to leave room for OS
# and other apps.
MEM_LIMIT_PCT = 40


[target]

# Number of nodes that will run load generation.
NODES = 100

# How long should each timepoint in final spec last?
TIMEPOINT_DURATION_SECS = 300

# Output directory
OUTPUT_DIRECTORY = ./loadfiles


[spike]

SPIKES_DESC_FILE = ./spikes/example.txt

# Separator used in spikes desc file.
# Valid options: comma, whitespace
SEPARATOR = comma

# Columns in description file for each
# of the parameters required to generate
# spikes. Please refer to Xerxes paper
# for more details.

# Start and end nodes must be between
# 0 and NODES value above (non-inclusive).
START_NODE_COL = 0
END_NODE_COL = 1

# Options: cpu or mem.
SPIKE_RESOURCE_COL = 2

# Specify time in seconds from start.
# Values will be rounded off to
# nearest timepoint_duration_secs.
TIME_SPIKE_START_COL = 3
TIME_PEAK_START_COL = 4
TIME_PEAK_END_COL = 5
TIME_SPIKE_END_COL = 6

# Note that the magnitude for CPU spikes
# will clip at 100% and that of memory
# at the limit specified.
SPIKE_MAGNITUDE_MULTIPLIER_COL = 7
